# kiwoom API 함수를 직접 사용할 수 없어서, dynamicCall(API) 형식으로 사용
# OCX 방식이기 때문에 API 호출 시 dynamicCall 사용
# QAxWidget -> self.kiwoom -> dynamicCall(kiwoom API)


[OnReceiveTrData() 이벤트]

void OnReceiveTrData(
          BSTR sScrNo,       // 화면번호
          BSTR sRQName,      // 사용자 구분명
          BSTR sTrCode,      // TR이름
          BSTR sRecordName,  // 레코드 이름
          BSTR sPrevNext,    // 연속조회 유무를 판단하는 값 0: 연속(추가조회)데이터 없음, 2:연속(추가조회) 데이터 있음
          LONG nDataLength,  // 사용안함.
          BSTR sErrorCode,   // 사용안함.
          BSTR sMessage,     // 사용안함.
          BSTR sSplmMsg     // 사용안함.
    )

          요청했던 조회데이터를 수신했을때 발생됩니다.
          수신된 데이터는 이 이벤트내부에서 GetCommData()함수를 이용해서 얻어올 수 있습니다.

        def _on_receive_tr_data(self, screen_no, rqname, trcode, record_name, next, unused1, unused2,unused3, unused4)

[GetRepeatCnt() 함수]

          GetRepeatCnt(
          BSTR sTrCode, // TR 이름
          BSTR sRecordName // 레코드 이름
          )

          데이터 수신시 멀티데이터의 갯수(반복수)를 얻을수 있습니다.
          예를들어 차트조회는 한번에 최대 900개 데이터를 수신할 수 있는데
          이렇게 수신한 데이터갯수를 얻을때 사용합니다.
          이 함수는 OnReceiveTRData()이벤트가 발생될때 그 안에서 사용해야 합니다.

          ------------------------------------------------------------------------------------------------------------------------------------

          예)
          [OPT10081 : 주식일봉차트조회요청예시]

          OnReceiveTrData(...)
          {
            if(strRQName == _T("주식일봉차트"))
            {
              int nCnt = OpenAPI.GetRepeatCnt(sTrcode, strRQName);		// 데이터 반복건수 구함
              for (int nIdx = 0; nIdx < nCnt; nIdx++)
              {
                strData = OpenAPI.GetCommData(sTrcode, strRQName, nIdx, _T("거래량"));   strData.Trim();
                strData = OpenAPI.GetCommData(sTrcode, strRQName, nIdx, _T("시가"));   strData.Trim();
                strData = OpenAPI.GetCommData(sTrcode, strRQName, nIdx, _T("고가"));   strData.Trim();
                strData = OpenAPI.GetCommData(sTrcode, strRQName, nIdx, _T("저가"));   strData.Trim();
                strData = OpenAPI.GetCommData(sTrcode, strRQName, nIdx, _T("현재가"));   strData.Trim();
              }
            }
          }

          ------------------------------------------------------------------------------------------------------------------------------------


[CommRqData() 함수]

          TR 요청 함수

          CommRqData(
          BSTR sRQName,    // 사용자 구분명 (임의로 지정, 한글지원)
          BSTR sTrCode,    // 조회하려는 TR이름
          long nPrevNext,  // 연속조회여부
          BSTR sScreenNo  // 화면번호 (4자리 숫자 임의로 지정)
          )

          조회요청 함수입니다.
          리턴값 0이면 조회요청 정상 나머지는 에러

          예)
          -200 시세과부하
          -201 조회전문작성 에러


[GetCommData() 함수]

          GetCommData(
          BSTR strTrCode,   // TR 이름
          BSTR strRecordName,   // 레코드이름
          long nIndex,      // nIndex번째
          BSTR strItemName) // TR에서 얻어오려는 출력항목이름

          OnReceiveTRData()이벤트가 발생될때 수신한 데이터를 얻어오는 함수입니다.
          이 함수는 OnReceiveTRData()이벤트가 발생될때 그 안에서 사용해야 합니다.

          ------------------------------------------------------------------------------------------------------------------------------------

          예)
          [OPT10081 : 주식일봉차트조회요청예시]

          OnReceiveTrData(...)
          {
            if(strRQName == _T("주식일봉차트"))
            {
              int nCnt = OpenAPI.GetRepeatCnt(sTrcode, strRQName);
              for (int nIdx = 0; nIdx < nCnt; nIdx++)
              {
                strData = OpenAPI.GetCommData(sTrcode, strRQName, nIdx, _T("거래량"));   strData.Trim();	// nIdx번째의 거래량 데이터 구함
                strData = OpenAPI.GetCommData(sTrcode, strRQName, nIdx, _T("시가"));   strData.Trim();
                strData = OpenAPI.GetCommData(sTrcode, strRQName, nIdx, _T("고가"));   strData.Trim();
                strData = OpenAPI.GetCommData(sTrcode, strRQName, nIdx, _T("저가"));   strData.Trim();
                strData = OpenAPI.GetCommData(sTrcode, strRQName, nIdx, _T("현재가"));   strData.Trim();
              }
            }
          }

          ------------------------------------------------------------------------------------------------------------------------------------


 [LONG GetLoginInfo()]
    # 로그인 후 사용할 수 있으며 인자값에 대응하는 정보를 얻을 수 있습니다.
    # 인자는 다음값을 사용할 수 있습니다.
    #
    # "ACCOUNT_CNT" : 보유계좌 갯수를 반환합니다.
    # "ACCLIST" 또는 "ACCNO" : 구분자 ';'로 연결된 보유계좌 목록을 반환합니다.
    # "USER_ID" : 사용자 ID를 반환합니다.
    # "USER_NAME" : 사용자 이름을 반환합니다.
    # "GetServerGubun" : 접속서버 구분을 반환합니다.(1 : 모의투자, 나머지 : 실거래 서버)
    # "KEY_BSECGB" : 키보드 보안 해지여부를 반환합니다.(0 : 정상, 1 : 해지)
    # "FIREW_SECGB" : 방화벽 설정여부를 반환합니다.(0 : 미설정, 1 : 설정, 2 : 해지)